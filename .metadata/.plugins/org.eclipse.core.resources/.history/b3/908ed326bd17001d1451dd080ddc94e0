package kr.board.frontcontroller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.board.dao.BoardDAO;
import kr.board.entity.Board;

@WebServlet("*.do")
public class BoardFrontController extends HttpServlet {
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		request.setCharacterEncoding("utf-8");
		
		// FrontController - 1개(DispatcherServlet)
		// 1. 어떤 요청인지 파악하기(command 구하기)
		String reqPath = request.getRequestURI();
		String cpath = request.getContextPath();
		String command= reqPath.substring(cpath.length());
		System.out.println(command);
		
		// 2. command에 따른 분기작업(if~else if~)
		BoardDAO dao = new BoardDAO();
		if(command.equals("/boardList.do")) {
			// 리스트 화면으로
			List<Board> list = dao.allList();
			// View에 forward
			request.setAttribute("list", list);
			RequestDispatcher rd = request.getRequestDispatcher("board/boardList.jsp");
			rd.forward(request, response);
		}else if(command.equals("/boardWriteForm.do")) {
			// 글쓰기화면으로
			RequestDispatcher rd = request.getRequestDispatcher("board/boardWrite.jsp");
			rd.forward(request, response);
		}else if(command.equals("/boardWrite.do")) {
			// 글쓰기 처리
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			String writer = request.getParameter("writer");
			Board vo = new Board();
			vo.setTitle(title);
			vo.setContent(content);
			vo.setWriter(writer);
			dao.boardWrite(vo);
			response.sendRedirect(cpath+"/boardList.do");
		}else if(command.equals("/boardView.do")) {
			// 상세보기 처리 -> JSP
			int num = Integer.parseInt(request.getParameter("num"));
			Board vo = dao.boardView(num);
			request.setAttribute("vo", vo);
			RequestDispatcher rd = request.getRequestDispatcher("board/boardView.jsp");
			rd.forward(request, response);
		}else if(command.equals("/boardDelete.do")) {
			//삭제처리 -> 리스트로
			int num = Integer.parseInt(request.getParameter("num"));
			dao.boardDelete(num);
			response.sendRedirect(cpath+"/boardList.do");
		}else if(command.equals("/boardUpdateForm.do")) {
			// 수정데이터 -> 수정화면(JSP)
			int num = Integer.parseInt(request.getParameter("num"));
			Board vo = dao.boardView(num);
			request.setAttribute("vo", vo);
			RequestDispatcher rd = request.getRequestDispatcher("board/boardUpdate.jsp");
			rd.forward(request, response);
		}else if(command.equals("/boardUpdate.do")) {
			// 수정처리 -> 리스트로
			int num = Integer.parseInt(request.getParameter("num"));
			String content = request.getParameter("content");
			String title = request.getParameter("title");
			Board vo = new Board();
			vo.setTitle(title);
			vo.setContent(content);
			vo.setNum(num);
			dao.boardUpdate(vo);
			response.sendRedirect(cpath+"/boardList.do");
		}
		
		
		
	}
}
